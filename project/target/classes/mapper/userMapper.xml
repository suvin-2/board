<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserDAO">
	
	<!-- 전체 회원 조회 -->
	<select id="userSelect" resultType="userVO">
		SELECT USERID,
			   USERPW,
			   USERNAME,
			   BIRTHDAY,
			   GENDER,
			   EMAIL,
			   TEL,
			   AUTH,
			   ENABLED
		FROM B_USER
	</select>
	
	<!-- 회원 로그인 사용 X -->
	<select id="getUserById" resultType="com.suvin.project.security.CustomUserDetails">
		SELECT USERID,
			   USERPW,
			   USERNAME,
			   BIRTHDAY,
			   GENDER,
			   EMAIL,
			   TEL,
			   AUTH,
			   ENABLED
		FROM B_USER
		WHERE USERID = #{userId}
	</select>
	
	<!-- 회원 로그인 -->
	<select id="userLogin" resultType="userVO">
		SELECT USERID,
		       USERPW,
		       USERNAME,
		       BIRTHDAY,
		       GENDER,
		       EMAIL,
		       TEL,
		       AUTH,
		       ENABLED
		FROM B_USER
		WHERE USERID=#{userId}
	</select>
	
	<!-- 임시 비밀번호 변경 -->
	<update id="userRandomPw">
		UPDATE B_USER
		SET USERPW = #{userPw}
		WHERE USERID = #{userId}
	</update>
	
	<!-- 회원 로그인 (권한조회)-->
	<select id="selectUserAuth" resultType="com.suvin.project.security.CustomUserDetails">
		SELECT AUTH
		FROM B_USER
		WHERE USERID=#{userId}
	</select>
	
	<!-- 기존 회원 아이디 조회(회원가입 시 아이디 중복 체크) -->
	<select id="userIdCheck" resultType="userVO" parameterType="String">
		SELECT USERID
		FROM B_USER
		WHERE USERID = #{userId}
	</select>
	
	<!-- 기존 회원 이메일 조회(회원가입 시 이메일 중복 체크) -->
	<select id="userEmailCheck" resultType="userVO" parameterType="String">
		SELECT EMAIL
		FROM B_USER
		WHERE EMAIL = #{email}
	</select>
	
	<!-- 기존 회원 전화번호 조회(회원가입 시 전화번호 중복 체크) -->
	<select id="userTelCheck" resultType="userVO" parameterType="String">
		SELECT TEL
		FROM B_USER
		WHERE TEL = #{tel}
	</select>
	
	<!-- 회원 가입 -->
	<insert id="userInsert" parameterType="userVO">
		INSERT INTO B_USER(USERID,USERPW,USERNAME,BIRTHDAY,GENDER,EMAIL,TEL,AUTH,ENABLED)
		VALUES(#{userId},#{userPw},#{userName},TO_DATE(#{birthday},'YYYY-MM-DD'),#{gender},#{email},#{tel},'ROLE_USER',1)
	</insert>
	
	<!-- 회원 정보 수정 -->
	<update id="userUpdate">
		UPDATE B_USER
		SET USERPW = #{userPw},
			USERNAME = #{userName},
			EMAIL = #{email},
			TEL = #{tel} 
		WHERE USERID = #{userId}
	</update>
	
	<!-- 내가 작성한 게시글 목록 -->
	<select id="writingList" resultType="boardVO" parameterType="criteria">
		SELECT  BNO, 
		        TITLE, 
		        CONTENT,
		        CNT,
		        BDATE,
		        WRITER, 
		        CNO,
		        CNAME,
		        SNAME
		FROM (SELECT B.BNO,
		           B.TITLE,
		           B.CONTENT,
		           B.CNT,
		           B.BDATE,
		           B.WRITER,
		           B.CNO,
		           C.CNAME,
		           C.SNAME,
		           ROW_NUMBER() OVER(PARTITION BY B.WRITER ORDER BY B.BNO DESC) AS RNUM
		    FROM BOARD B, CATEGORY C 
		    WHERE B.CNO = C.CNO ) BD
		WHERE WRITER = #{userId} AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY BDATE DESC
	</select>
	
	<!-- 내가 작성한 게시글 수 -->
	<select id="writingListCount" resultType="int">
		SELECT COUNT(BNO)
		FROM BOARD
		WHERE WRITER = #{userId}
	</select>
	
	<!-- 내가 작성한 댓글 목록 -->
	<select id="replyList" resultType="com.suvin.project.vo.ReplyVO" parameterType="criteria">
		SELECT BNO, 
		       RNO, 
		       TITLE,
		       RCONTENT,
		       WRITER,
		       CNO,
		       SNAME,
		       RWRITER, 
		       RDATE, 
		       UDATE,
		       CNT
		FROM (SELECT R.BNO, 
		             R.RNO,
		             B.TITLE,
		             R.RCONTENT,
		             B.WRITER,
		             B.CNO,
		             C.SNAME,
		             R.RWRITER, 
		             R.RDATE, 
		             R.UDATE,
		             B.CNT,
		             ROW_NUMBER() OVER(PARTITION BY B.WRITER ORDER BY B.BNO DESC) AS RNUM
		    FROM BOARD B, B_REPLY R, CATEGORY C
		    WHERE B.BNO = R.BNO AND B.CNO = C.CNO) BD
		WHERE RWRITER = #{userId} AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY BNO DESC
	</select>
	
	<!-- 내가 작성한 댓글 수 -->
	<select id="replyListCount" resultType="int">
		SELECT COUNT(RNO)
		FROM B_REPLY
		WHERE RWRITER = #{userId}
	</select>
	
	<!-- 내가 좋아요 한 게시글 목록 -->
	<select id="likeList" resultType="boardVO" parameterType="criteria">
		SELECT CNAME,
		       SNAME, 
		       BNO,
		       TITLE,
		       WRITER,
		       CNO,
		       BDATE,
		       USERID,
		       CNT
		FROM (SELECT C.CNAME,
		             C.SNAME,
		             B.BNO,
		             B.TITLE,
		             B.WRITER,
		             B.CNO,
		             B.BDATE,
		             L.USERID,
		             B.CNT,
		             ROW_NUMBER() OVER(PARTITION BY B.WRITER ORDER BY B.BNO DESC) AS RNUM
		    FROM BOARD B, B_LIKE L, CATEGORY C
		    WHERE B.BNO = L.BNO AND B.CNO = C.CNO) BD
		WHERE USERID = #{userId} AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY BDATE DESC
	</select>
	
	<!-- 내가 좋아요 한 글 수 -->
	<select id="likeListCount" resultType="int">
		SELECT COUNT(BNO)
		FROM B_LIKE
		WHERE USERID = #{userId}
	</select>
	
</mapper>