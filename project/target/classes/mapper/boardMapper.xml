<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardDAO">

	<!-- 게시판 글 모두 조회  -->
	<select id="boardSelect" resultType="boardVO">
		SELECT B.BNO,
		       B.TITLE,
		       B.CONTENT,
		       B.CNT,
		       B.BDATE,
		       B.WRITER,
		       B.CNO,
		       C.CNAME,
		       C.SNAME
		FROM BOARD B, CATEGORY C
		WHERE B.CNO = C.CNO
		ORDER BY BNO DESC
	</select>
	
	<!-- 게시판 카테고리 별 게시글 조회 페이징 테스트 -->
	<select id="boardCategorySelect" resultType="boardVO" parameterType="criteria"> 
		SELECT  BNO, 
		        TITLE, 
		        CONTENT,
		        CNT,
		        BDATE,
		        WRITER, 
		        CNO,
		        CNAME,
		        SNAME
		FROM (SELECT B.BNO,
		           B.TITLE,
		           B.CONTENT,
		           B.CNT,
		           B.BDATE,
		           B.WRITER,
		           B.CNO,
		           C.CNAME,
		           C.SNAME,
		           ROW_NUMBER() OVER(PARTITION BY C.CNO ORDER BY B.BNO DESC) AS RNUM
		    FROM BOARD B, CATEGORY C 
		    WHERE B.CNO = C.CNO ) BD
		WHERE CNAME = #{cName} AND SNAME = #{sName} AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY BNO DESC
	</select>
	
	<!-- 카테고리 별 게시글 수 -->
	<select id="listCount" resultType="int">
		SELECT COUNT(BNO)
		FROM BOARD
		WHERE CNO = #{cNo}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="boardUpdateCnt">
		UPDATE
			BOARD
		SET
			CNT = CNT+1
		WHERE
			BNO = #{bNo}
	</update>
	
	<!-- 게시글 단건 조회 -->
	<select id="boardSelectOne" resultType="boardVO">
		SELECT B.BNO,
		       B.TITLE,
		       B.CONTENT,
		       B.CNT,
		       B.BDATE,
		       B.WRITER,
		       B.CNO,
		       C.CNAME,
		       C.SNAME
		FROM BOARD B, CATEGORY C
		WHERE B.CNO = C.CNO AND B.BNO = #{bNo}
		ORDER BY BNO DESC
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="boardInsert">
		<selectKey resultType="int" keyProperty="bNo" order="BEFORE">
			SELECT NVL(MAX(BNO),0)+1 FROM BOARD
		</selectKey>
		INSERT INTO BOARD (
			BNO,
			TITLE,
			CONTENT,
			CNT,
			BDATE,
			WRITER,
			CNO
		) VALUES (
			#{bNo},
			#{title},
			#{content},
			0,
			SYSDATE,
			#{writer},
			#{cNo}
		)
	</insert>
	
	<!-- 파일 등록 -->
	<insert id="fileInsert" parameterType="hashMap">
		INSERT INTO MP_FILE(
			FILE_NO,
			BNO,
			ORG_FILE_NAME,
			STORED_FILE_NAME,
			FILE_SIZE
		)VALUES(
			SEQ_MP_FILE_NO.NEXTVAL,
			#{bNo},
			#{ORG_FILE_NAME},
			#{STORED_FILE_NAME},
			#{FILE_SIZE}
		)
    </insert>
	
	<!-- 게시글 수정 -->
	<update id="boardUpdate">
		UPDATE
			BOARD
		SET
			TITLE = #{title},
			CONTENT = #{content},
			CNO = #{cNo}
		WHERE
			BNO = #{bNo}
	</update>

	<delete id="boardDelete">
		DELETE FROM 
				BOARD
		WHERE BNO = #{bNo}
	</delete>
	
	<!-- 게시판 댓글 조회  -->
	<select id="replySelect" resultType="com.suvin.project.vo.ReplyVO">
		SELECT BNO,
		       RNO,
		       RCONTENT,
		       RWRITER,
		       RDATE,
		       UDATE
		FROM B_REPLY
		WHERE BNO = #{bNo}
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="replyInsert">
		INSERT INTO B_REPLY(
			BNO,
			RNO,
			RCONTENT,
			RWRITER
		) VALUES (
			#{bNo},
			B_REPLY_SEQ.NEXTVAL,
			#{rContent},
			#{rWriter}
		)
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="replyUpdate">
		UPDATE B_REPLY
		SET RCONTENT = #{rContent}, UDATE = SYSDATE
		WHERE RNO = #{rNo}
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="replyDelete">
		DELETE FROM B_REPLY
		WHERE RNO = #{rNo}
	</delete>
	
	<!-- 게시글 좋아요 여부 조회 -->
	<select id="boardLikeSelect" resultType="boardVO">
		SELECT ENABLED
		FROM B_LIKE
		WHERE BNO = #{bNo} AND USERID = #{userId}
	</select>
	
	<!-- 게시글 좋아요 첫 클릭 -->
	<insert id="boardLikeInsert">
		INSERT INTO B_LIKE 
		VALUES (#{bNo},#{userId},1)
	</insert>
	
	<!-- 게시글 좋아요 클릭/클릭취소 -->
	<update id="boardLikeUpdate">
		UPDATE B_LIKE
		SET ENABLED = #{enabled}
		WHERE BNO = #{bNo} AND USERID = #{userId}
	</update>
	
	<!-- 게시글 좋아요 총 개수 -->
	<select id="boardLikeAllSelect" resultType="boardVO">
		SELECT BNO
		FROM B_LIKE
		WHERE BNO = #{bNo} AND ENABLED = 1
	</select>
	
	<!-- 내가 작성한 게시글 목록 -->
	<select id="writingList" resultType="boardVO" parameterType="criteria">
		SELECT  BNO, 
		        TITLE, 
		        CONTENT,
		        CNT,
		        BDATE,
		        WRITER, 
		        CNO,
		        CNAME,
		        SNAME
		FROM (SELECT B.BNO,
		           B.TITLE,
		           B.CONTENT,
		           B.CNT,
		           B.BDATE,
		           B.WRITER,
		           B.CNO,
		           C.CNAME,
		           C.SNAME,
		           ROW_NUMBER() OVER(PARTITION BY B.WRITER ORDER BY B.BNO DESC) AS RNUM
		    FROM BOARD B, CATEGORY C 
		    WHERE B.CNO = C.CNO ) BD
		WHERE WRITER = #{userId} AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY BDATE DESC
	</select>
	
	<!-- 내가 작성한 댓글 목록 -->
	<select id="replyList" resultType="com.suvin.project.vo.ReplyVO" parameterType="criteria">
		SELECT BNO, 
		       RNO, 
		       TITLE,
		       RCONTENT,
		       WRITER,
		       CNO,
		       SNAME,
		       RWRITER, 
		       RDATE, 
		       UDATE,
		       CNT
		FROM (SELECT R.BNO, 
		             R.RNO,
		             B.TITLE,
		             R.RCONTENT,
		             B.WRITER,
		             B.CNO,
		             C.SNAME,
		             R.RWRITER, 
		             R.RDATE, 
		             R.UDATE,
		             B.CNT,
		             ROW_NUMBER() OVER(PARTITION BY B.WRITER ORDER BY B.BNO DESC) AS RNUM
		    FROM BOARD B, B_REPLY R, CATEGORY C
		    WHERE B.BNO = R.BNO AND B.CNO = C.CNO) BD
		WHERE RWRITER = #{userId} AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY BNO DESC
	</select>
	
	<!-- 내가 좋아요 한 게시글 목록 -->
	<select id="likeList" resultType="boardVO" parameterType="criteria">
		SELECT CNAME,
		       SNAME, 
		       BNO,
		       TITLE,
		       WRITER,
		       CNO,
		       BDATE,
		       USERID,
		       CNT
		FROM (SELECT C.CNAME,
		             C.SNAME,
		             B.BNO,
		             B.TITLE,
		             B.WRITER,
		             B.CNO,
		             B.BDATE,
		             L.USERID,
		             B.CNT,
		             ROW_NUMBER() OVER(PARTITION BY B.WRITER ORDER BY B.BNO DESC) AS RNUM
		    FROM BOARD B, B_LIKE L, CATEGORY C
		    WHERE B.BNO = L.BNO AND B.CNO = C.CNO) BD
		WHERE USERID = #{userId} AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY BDATE DESC
	</select>
	
</mapper>